<UserControl x:Class="AlmaDUploader.Pages.SettingsUploadManager"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:app="clr-namespace:AlmaDUploader"
             xmlns:util="clr-namespace:AlmaDUploader.Utils"
             xmlns:p="clr-namespace:AlmaDUploader.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             DataContext="{x:Static app:App.UploadManager}"
             >
    <ScrollViewer>
        <StackPanel MinWidth="200">
            <TextBlock Text="Upload Manager" Style="{StaticResource Heading2}" Margin="0,0,0,8" />

            <!-- actual form starts here -->
            <StackPanel x:Name="Form" Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="StackPanel">
                        <Setter Property="Orientation" Value="Horizontal" />
                        <Setter Property="Margin" Value="0,0,0,4" />
                    </Style>
                    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                        <Setter Property="Width" Value="150" />
                        <Setter Property="VerticalAlignment" Value="Top" />
                    </Style>
                    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                        <Setter Property="Padding" Value="0,3" />
                    </Style>
                    <Style TargetType="mui:ModernButton" x:Key="btnDefault">
                        <Setter Property="Margin" Value="0,0,8,0" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="IconWidth" Value="20" />
                        <Setter Property="IconHeight" Value="20" />
                        <Setter Property="EllipseStrokeThickness" Value="1" />
                        <Setter Property="EllipseDiameter" Value="36" />
                    </Style>
                    <PathGeometry x:Key="PlayIconData">F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z</PathGeometry>
                    <PathGeometry x:Key="PauseIconData">F1 M 26.9167,23.75L 33.25,23.75L 33.25,52.25L 26.9167,52.25L 26.9167,23.75 Z M 42.75,23.75L 49.0833,23.75L 49.0833,52.25L 42.75,52.25L 42.75,23.75 Z</PathGeometry>
                </StackPanel.Resources>

                <StackPanel>
                    <Label Content="Simultaneous Uploads" Target="{Binding ElementName=cmbWorkers}"/>
                    <ComboBox Name="cmbWorkers" SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=UploadWorkerThreads, Mode=TwoWay}"
                              SelectionChanged="cmbWorkers_Changed">
                        <sys:Int32>1</sys:Int32>
                        <sys:Int32>2</sys:Int32>
                        <sys:Int32>3</sys:Int32>
                        <sys:Int32>4</sys:Int32>
                        <sys:Int32>5</sys:Int32>
                        <sys:Int32>6</sys:Int32>
                        <sys:Int32>7</sys:Int32>
                        <sys:Int32>8</sys:Int32>
                        <sys:Int32>9</sys:Int32>
                        <sys:Int32>10</sys:Int32>
                    </ComboBox>
                </StackPanel>

                <StackPanel>
                    <Label Content="Upload Manager" />
                    <StackPanel Orientation="Vertical">
                        <!--
                        <TextBlock Visibility="Visible" >
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                            <Setter Property="Text" Value="Running" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsRunning}" Value="False">
                                            <Setter Property="Text" Value="Paused" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    -->
                        <mui:ModernButton Click="UploadManager_Click">
                            <mui:ModernButton.Style>
                                <Style TargetType="mui:ModernButton" BasedOn="{StaticResource btnDefault}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                            <Setter Property="IconData" Value="{StaticResource PauseIconData}" />
                                            <Setter Property="ToolTip" Value="Running. Click to pause." />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsRunning}" Value="False">
                                            <Setter Property="IconData" Value="{StaticResource PlayIconData}" />
                                            <Setter Property="ToolTip" Value="Paused. Click to start." />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </mui:ModernButton.Style>
                        </mui:ModernButton>

                            <!--
                        <ToggleButton IsChecked="{Binding IsUploadManagerRunning}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Content" Value="Stopped... Start" />
                                        </Trigger>

                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" Value="Running... Stop" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        -->
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</UserControl>
